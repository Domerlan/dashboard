name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.11
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot || exit 1"
          --health-interval=10s --health-timeout=5s --health-retries=10
        ports:
          - 3306:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, bcmath, zip, curl, gd
          coverage: none

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer deps
        run: composer install --no-interaction --prefer-dist --no-progress
        working-directory: courier-plus

      - name: Prepare .env
        run: |
          cp .env.example .env
          sed -i "s/^DB_CONNECTION=.*/DB_CONNECTION=mysql/" .env
          sed -i "s/^DB_HOST=.*/DB_HOST=127.0.0.1/" .env
          sed -i "s/^DB_PORT=.*/DB_PORT=3306/" .env
          sed -i "s/^DB_DATABASE=.*/DB_DATABASE=testing/" .env
          sed -i "s/^DB_USERNAME=.*/DB_USERNAME=root/" .env
          sed -i "s/^DB_PASSWORD=.*/DB_PASSWORD=root/" .env
          php artisan key:generate
        working-directory: courier-plus

      - name: Wait for DB
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -proot --silent; then echo "DB up"; exit 0; fi; sleep 2; done; exit 1

      - name: Run migrations
        run: php artisan migrate --force
        working-directory: courier-plus

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: courier-plus/package-lock.json

      - name: Install Node deps
        run: npm ci
        working-directory: courier-plus

      - name: Build Frontend
        run: npm run build
        working-directory: courier-plus

      - name: Run PHPUnit
        run: vendor/bin/phpunit --testdox
        working-directory: courier-plus
